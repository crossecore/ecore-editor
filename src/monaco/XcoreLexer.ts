// Generated from c:\data\repos\ecore-editor\XcoreLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XcoreLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly NL = 2;
	public static readonly Package = 3;
	public static readonly Abstract = 4;
	public static readonly Class = 5;
	public static readonly Interface = 6;
	public static readonly Extends = 7;
	public static readonly Comma = 8;
	public static readonly Dot = 9;
	public static readonly CurlyBraceOpen = 10;
	public static readonly CurlyBraceClose = 11;
	public static readonly AngleBraceOpen = 12;
	public static readonly AngleBraceClose = 13;
	public static readonly Unordered = 14;
	public static readonly Unique = 15;
	public static readonly Readonly = 16;
	public static readonly Transient = 17;
	public static readonly Unsettable = 18;
	public static readonly Volatile = 19;
	public static readonly Derived = 20;
	public static readonly Idattr = 21;
	public static readonly Contains = 22;
	public static readonly Opposite = 23;
	public static readonly Operation = 24;
	public static readonly Void = 25;
	public static readonly BraceOpen = 26;
	public static readonly BraceClose = 27;
	public static readonly Throws = 28;
	public static readonly SquareBraceOpen = 29;
	public static readonly SquareBraceClose = 30;
	public static readonly Questionmark = 31;
	public static readonly Star = 32;
	public static readonly Plus = 33;
	public static readonly Minus = 34;
	public static readonly Dotdot = 35;
	public static readonly Ampersand = 36;
	public static readonly Enum = 37;
	public static readonly As = 38;
	public static readonly Equal = 39;
	public static readonly ID = 40;
	public static readonly INT = 41;
	public static readonly STRING = 42;
	public static readonly WS_CHANNEL = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WS_CHANNEL",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "NL", "Package", "Abstract", "Class", "Interface", "Extends", "Comma", 
		"Dot", "CurlyBraceOpen", "CurlyBraceClose", "AngleBraceOpen", "AngleBraceClose", 
		"Unordered", "Unique", "Readonly", "Transient", "Unsettable", "Volatile", 
		"Derived", "Idattr", "Contains", "Opposite", "Operation", "Void", "BraceOpen", 
		"BraceClose", "Throws", "SquareBraceOpen", "SquareBraceClose", "Questionmark", 
		"Star", "Plus", "Minus", "Dotdot", "Ampersand", "Enum", "As", "Equal", 
		"ID", "INT", "STRING",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'package'", "'abstract'", "'class'", 
		"'interface'", "'extends'", "','", "'.'", "'{'", "'}'", "'<'", "'>'", 
		"'unordered'", "'unique'", "'readonly'", "'transient'", "'unsettable'", 
		"'volatile'", "'derived'", "'id'", "'contains'", "'opposite'", "'op'", 
		"'void'", "'('", "')'", "'throws'", "'['", "']'", "'?'", "'*'", "'+'", 
		"'-'", "'..'", "'&'", "'enum'", "'as'", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "NL", "Package", "Abstract", "Class", "Interface", "Extends", 
		"Comma", "Dot", "CurlyBraceOpen", "CurlyBraceClose", "AngleBraceOpen", 
		"AngleBraceClose", "Unordered", "Unique", "Readonly", "Transient", "Unsettable", 
		"Volatile", "Derived", "Idattr", "Contains", "Opposite", "Operation", 
		"Void", "BraceOpen", "BraceClose", "Throws", "SquareBraceOpen", "SquareBraceClose", 
		"Questionmark", "Star", "Plus", "Minus", "Dotdot", "Ampersand", "Enum", 
		"As", "Equal", "ID", "INT", "STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XcoreLexer._LITERAL_NAMES, XcoreLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XcoreLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XcoreLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XcoreLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XcoreLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XcoreLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XcoreLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XcoreLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02,\u0137\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x03\x02\x06\x02Y\n\x02\r\x02\x0E\x02Z\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x05\x03b\n\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F" +
		"\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03" +
		"&\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03)\x05)\u011F\n)\x03" +
		")\x03)\x07)\u0123\n)\f)\x0E)\u0126\v)\x03*\x06*\u0129\n*\r*\x0E*\u012A" +
		"\x03+\x03+\x03+\x03+\x07+\u0131\n+\f+\x0E+\u0134\v+\x03+\x03+\x02\x02" +
		"\x02,\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b" +
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,\x03\x02\b\x04\x02\"\"vv\x04\x02pptt\x05\x02C" +
		"\\aac|\x06\x022;C\\aac|\t\x02$$^^ddhhppttvw\x04\x02$$^^\x02\u013D\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
		"\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
		"C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02" +
		"\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x03X\x03" +
		"\x02\x02\x02\x05a\x03\x02\x02\x02\x07e\x03\x02\x02\x02\tm\x03\x02\x02" +
		"\x02\vv\x03\x02\x02\x02\r|\x03\x02\x02\x02\x0F\x86\x03\x02\x02\x02\x11" +
		"\x8E\x03\x02\x02\x02\x13\x90\x03\x02\x02\x02\x15\x92\x03\x02\x02\x02\x17" +
		"\x94\x03\x02\x02\x02\x19\x96\x03\x02\x02\x02\x1B\x98\x03\x02\x02\x02\x1D" +
		"\x9A\x03\x02\x02\x02\x1F\xA4\x03\x02\x02\x02!\xAB\x03\x02\x02\x02#\xB4" +
		"\x03\x02\x02\x02%\xBE\x03\x02\x02\x02\'\xC9\x03\x02\x02\x02)\xD2\x03\x02" +
		"\x02\x02+\xDA\x03\x02\x02\x02-\xDD\x03\x02\x02\x02/\xE6\x03\x02\x02\x02" +
		"1\xEF\x03\x02\x02\x023\xF2\x03\x02\x02\x025\xF7\x03\x02\x02\x027\xF9\x03" +
		"\x02\x02\x029\xFB\x03\x02\x02\x02;\u0102\x03\x02\x02\x02=\u0104\x03\x02" +
		"\x02\x02?\u0106\x03\x02\x02\x02A\u0108\x03\x02\x02\x02C\u010A\x03\x02" +
		"\x02\x02E\u010C\x03\x02\x02\x02G\u010E\x03\x02\x02\x02I\u0111\x03\x02" +
		"\x02\x02K\u0113\x03\x02\x02\x02M\u0118\x03\x02\x02\x02O\u011B\x03\x02" +
		"\x02\x02Q\u011E\x03\x02\x02\x02S\u0128\x03\x02\x02\x02U\u012C\x03\x02" +
		"\x02\x02WY\t\x02\x02\x02XW\x03\x02\x02\x02YZ\x03\x02\x02\x02ZX\x03\x02" +
		"\x02\x02Z[\x03\x02\x02\x02[\\\x03\x02\x02\x02\\]\b\x02\x02\x02]\x04\x03" +
		"\x02\x02\x02^_\x07t\x02\x02_b\x07p\x02\x02`b\t\x03\x02\x02a^\x03\x02\x02" +
		"\x02a`\x03\x02\x02\x02bc\x03\x02\x02\x02cd\b\x03\x02\x02d\x06\x03\x02" +
		"\x02\x02ef\x07r\x02\x02fg\x07c\x02\x02gh\x07e\x02\x02hi\x07m\x02\x02i" +
		"j\x07c\x02\x02jk\x07i\x02\x02kl\x07g\x02\x02l\b\x03\x02\x02\x02mn\x07" +
		"c\x02\x02no\x07d\x02\x02op\x07u\x02\x02pq\x07v\x02\x02qr\x07t\x02\x02" +
		"rs\x07c\x02\x02st\x07e\x02\x02tu\x07v\x02\x02u\n\x03\x02\x02\x02vw\x07" +
		"e\x02\x02wx\x07n\x02\x02xy\x07c\x02\x02yz\x07u\x02\x02z{\x07u\x02\x02" +
		"{\f\x03\x02\x02\x02|}\x07k\x02\x02}~\x07p\x02\x02~\x7F\x07v\x02\x02\x7F" +
		"\x80\x07g\x02\x02\x80\x81\x07t\x02\x02\x81\x82\x07h\x02\x02\x82\x83\x07" +
		"c\x02\x02\x83\x84\x07e\x02\x02\x84\x85\x07g\x02\x02\x85\x0E\x03\x02\x02" +
		"\x02\x86\x87\x07g\x02\x02\x87\x88\x07z\x02\x02\x88\x89\x07v\x02\x02\x89" +
		"\x8A\x07g\x02\x02\x8A\x8B\x07p\x02\x02\x8B\x8C\x07f\x02\x02\x8C\x8D\x07" +
		"u\x02\x02\x8D\x10\x03\x02\x02\x02\x8E\x8F\x07.\x02\x02\x8F\x12\x03\x02" +
		"\x02\x02\x90\x91\x070\x02\x02\x91\x14\x03\x02\x02\x02\x92\x93\x07}\x02" +
		"\x02\x93\x16\x03\x02\x02\x02\x94\x95\x07\x7F\x02\x02\x95\x18\x03\x02\x02" +
		"\x02\x96\x97\x07>\x02\x02\x97\x1A\x03\x02\x02\x02\x98\x99\x07@\x02\x02" +
		"\x99\x1C\x03\x02\x02\x02\x9A\x9B\x07w\x02\x02\x9B\x9C\x07p\x02\x02\x9C" +
		"\x9D\x07q\x02\x02\x9D\x9E\x07t\x02\x02\x9E\x9F\x07f\x02\x02\x9F\xA0\x07" +
		"g\x02\x02\xA0\xA1\x07t\x02\x02\xA1\xA2\x07g\x02\x02\xA2\xA3\x07f\x02\x02" +
		"\xA3\x1E\x03\x02\x02\x02\xA4\xA5\x07w\x02\x02\xA5\xA6\x07p\x02\x02\xA6" +
		"\xA7\x07k\x02\x02\xA7\xA8\x07s\x02\x02\xA8\xA9\x07w\x02\x02\xA9\xAA\x07" +
		"g\x02\x02\xAA \x03\x02\x02\x02\xAB\xAC\x07t\x02\x02\xAC\xAD\x07g\x02\x02" +
		"\xAD\xAE\x07c\x02\x02\xAE\xAF\x07f\x02\x02\xAF\xB0\x07q\x02\x02\xB0\xB1" +
		"\x07p\x02\x02\xB1\xB2\x07n\x02\x02\xB2\xB3\x07{\x02\x02\xB3\"\x03\x02" +
		"\x02\x02\xB4\xB5\x07v\x02\x02\xB5\xB6\x07t\x02\x02\xB6\xB7\x07c\x02\x02" +
		"\xB7\xB8\x07p\x02\x02\xB8\xB9\x07u\x02\x02\xB9\xBA\x07k\x02\x02\xBA\xBB" +
		"\x07g\x02\x02\xBB\xBC\x07p\x02\x02\xBC\xBD\x07v\x02\x02\xBD$\x03\x02\x02" +
		"\x02\xBE\xBF\x07w\x02\x02\xBF\xC0\x07p\x02\x02\xC0\xC1\x07u\x02\x02\xC1" +
		"\xC2\x07g\x02\x02\xC2\xC3\x07v\x02\x02\xC3\xC4\x07v\x02\x02\xC4\xC5\x07" +
		"c\x02\x02\xC5\xC6\x07d\x02\x02\xC6\xC7\x07n\x02\x02\xC7\xC8\x07g\x02\x02" +
		"\xC8&\x03\x02\x02\x02\xC9\xCA\x07x\x02\x02\xCA\xCB\x07q\x02\x02\xCB\xCC" +
		"\x07n\x02\x02\xCC\xCD\x07c\x02\x02\xCD\xCE\x07v\x02\x02\xCE\xCF\x07k\x02" +
		"\x02\xCF\xD0\x07n\x02\x02\xD0\xD1\x07g\x02\x02\xD1(\x03\x02\x02\x02\xD2" +
		"\xD3\x07f\x02\x02\xD3\xD4\x07g\x02\x02\xD4\xD5\x07t\x02\x02\xD5\xD6\x07" +
		"k\x02\x02\xD6\xD7\x07x\x02\x02\xD7\xD8\x07g\x02\x02\xD8\xD9\x07f\x02\x02" +
		"\xD9*\x03\x02\x02\x02\xDA\xDB\x07k\x02\x02\xDB\xDC\x07f\x02\x02\xDC,\x03" +
		"\x02\x02\x02\xDD\xDE\x07e\x02\x02\xDE\xDF\x07q\x02\x02\xDF\xE0\x07p\x02" +
		"\x02\xE0\xE1\x07v\x02\x02\xE1\xE2\x07c\x02\x02\xE2\xE3\x07k\x02\x02\xE3" +
		"\xE4\x07p\x02\x02\xE4\xE5\x07u\x02\x02\xE5.\x03\x02\x02\x02\xE6\xE7\x07" +
		"q\x02\x02\xE7\xE8\x07r\x02\x02\xE8\xE9\x07r\x02\x02\xE9\xEA\x07q\x02\x02" +
		"\xEA\xEB\x07u\x02\x02\xEB\xEC\x07k\x02\x02\xEC\xED\x07v\x02\x02\xED\xEE" +
		"\x07g\x02\x02\xEE0\x03\x02\x02\x02\xEF\xF0\x07q\x02\x02\xF0\xF1\x07r\x02" +
		"\x02\xF12\x03\x02\x02\x02\xF2\xF3\x07x\x02\x02\xF3\xF4\x07q\x02\x02\xF4" +
		"\xF5\x07k\x02\x02\xF5\xF6\x07f\x02\x02\xF64\x03\x02\x02\x02\xF7\xF8\x07" +
		"*\x02\x02\xF86\x03\x02\x02\x02\xF9\xFA\x07+\x02\x02\xFA8\x03\x02\x02\x02" +
		"\xFB\xFC\x07v\x02\x02\xFC\xFD\x07j\x02\x02\xFD\xFE\x07t\x02\x02\xFE\xFF" +
		"\x07q\x02\x02\xFF\u0100\x07y\x02\x02\u0100\u0101\x07u\x02\x02\u0101:\x03" +
		"\x02\x02\x02\u0102\u0103\x07]\x02\x02\u0103<\x03\x02\x02\x02\u0104\u0105" +
		"\x07_\x02\x02\u0105>\x03\x02\x02\x02\u0106\u0107\x07A\x02\x02\u0107@\x03" +
		"\x02\x02\x02\u0108\u0109\x07,\x02\x02\u0109B\x03\x02\x02\x02\u010A\u010B" +
		"\x07-\x02\x02\u010BD\x03\x02\x02\x02\u010C\u010D\x07/\x02\x02\u010DF\x03" +
		"\x02\x02\x02\u010E\u010F\x070\x02\x02\u010F\u0110\x070\x02\x02\u0110H" +
		"\x03\x02\x02\x02\u0111\u0112\x07(\x02\x02\u0112J\x03\x02\x02\x02\u0113" +
		"\u0114\x07g\x02\x02\u0114\u0115\x07p\x02\x02\u0115\u0116\x07w\x02\x02" +
		"\u0116\u0117\x07o\x02\x02\u0117L\x03\x02\x02\x02\u0118\u0119\x07c\x02" +
		"\x02\u0119\u011A\x07u\x02\x02\u011AN\x03\x02\x02\x02\u011B\u011C\x07?" +
		"\x02\x02\u011CP\x03\x02\x02\x02\u011D\u011F\x07`\x02\x02\u011E\u011D\x03" +
		"\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120" +
		"\u0124\t\x04\x02\x02\u0121\u0123\t\x05\x02\x02\u0122\u0121\x03\x02\x02" +
		"\x02\u0123\u0126\x03\x02\x02\x02\u0124\u0122\x03\x02\x02\x02\u0124\u0125" +
		"\x03\x02\x02\x02\u0125R\x03\x02\x02\x02\u0126\u0124\x03\x02\x02\x02\u0127" +
		"\u0129\x042;\x02\u0128\u0127\x03\x02\x02\x02\u0129\u012A\x03\x02\x02\x02" +
		"\u012A\u0128\x03\x02\x02\x02\u012A\u012B\x03\x02\x02\x02\u012BT\x03\x02" +
		"\x02\x02\u012C\u0132\x07$\x02\x02\u012D\u012E\x07^\x02\x02\u012E\u0131" +
		"\t\x06\x02\x02\u012F\u0131\n\x07\x02\x02\u0130\u012D\x03\x02\x02\x02\u0130" +
		"\u012F\x03\x02\x02\x02\u0131\u0134\x03\x02\x02\x02\u0132\u0130\x03\x02" +
		"\x02\x02\u0132\u0133\x03\x02\x02\x02\u0133\u0135\x03\x02\x02\x02\u0134" +
		"\u0132\x03\x02\x02\x02\u0135\u0136\x07$\x02\x02\u0136V\x03\x02\x02\x02" +
		"\n\x02Za\u011E\u0124\u012A\u0130\u0132\x03\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XcoreLexer.__ATN) {
			XcoreLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XcoreLexer._serializedATN));
		}

		return XcoreLexer.__ATN;
	}

}

